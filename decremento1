library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use work.subtracao;

-- Este mÃ³dulo faz o decremento de A em uma unidade. --

entity decremento1 is
    Port ( A0 : in  STD_LOGIC := '0';
           A1 : in  STD_LOGIC := '0';
           A2 : in  STD_LOGIC := '0';
           A3 : in  STD_LOGIC := '0';
			  ENABLE : IN STD_LOGIC;
           OUT0 : out  STD_LOGIC;
           OUT1 : out  STD_LOGIC;
           OUT2 : out  STD_LOGIC;
           OUT3 : out  STD_LOGIC;
           OVERFLOW : out  STD_LOGIC;
           COUT : out  STD_LOGIC;
			  clk : in  STD_LOGIC;
			  ZERO : OUT  STD_LOGIC;
			  NEG : OUT STD_LOGIC);
end decremento1;

architecture Behavioral of decremento1 is


component subtracao is
    Port ( a0 : in  STD_LOGIC := '1';
           a1 : in  STD_LOGIC := '1';
			  clk : in  STD_LOGIC;
           a2 : in  STD_LOGIC := '0';
           a3 : in  STD_LOGIC := '0';
			  ENABLE : IN STD_LOGIC;
           b0 : in  STD_LOGIC := '1';
           b1 : in  STD_LOGIC := '0';
           b2 : in  STD_LOGIC := '0';
           b3 : in  STD_LOGIC := '0';    
			  out0 : out  STD_LOGIC;
           out1 : out  STD_LOGIC;
           out2 : out  STD_LOGIC;
           out3 : out  STD_LOGIC;
           overflow : out  STD_LOGIC;
			  ZERO : OUT STD_LOGIC;
           cout : out  STD_LOGIC;
           neg : out  STD_LOGIC);
end component;

begin

sub : subtracao port map (
	A0 => A0,
	A1 => A1,
	A2 => A2,
	A3 => A3,
	clk => clk,
	B0 => '1',
	B1 => '0',
	B2 => '0',
	B3 => '0',
	ENABLE => ENABLE,
	OUT0 => OUT0,
	OUT1 => OUT1,
	OUT2 => OUT2,
	OUT3 => OUT3,
	COUT => COUT,
	OVERFLOW => OVERFLOW,
	ZERO => ZERO,
	NEG => NEG);


end Behavioral;

